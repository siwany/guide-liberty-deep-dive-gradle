name: Test application

on:
  workflow_dispatch:
  pull_request:
    branches: [ prod, staging ]

jobs:
  check-files:
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    outputs:
      canSkip: ${{ steps.Checker.outputs.canSkip }}
    steps:
      - name: Get files
        uses: actions/checkout@v2
      - name: Get tools
        uses: actions/checkout@v2
        with:
          path: tools/
          repository: openliberty/guides-common
      - id: Checker
        shell: bash
        env:
          SKIP_LIST: true
        run: bash ./tools/pr-checker/checker.sh ${{ github.repository }} ${{ github.event.pull_request.number }} | tee checker.log 
      - id: Lint-Code-Base
        if: "! github.event.pull_request.head.repo.fork"
        uses: github/super-linter@latest
        env:
          VALIDATE_ALL_CODEBASE: false
          VALIDATE_JSCPD: false
          VALIDATE_KUBERNETES_KUBEVAL: false
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LINTER_RULES_PATH: ./tools/pr-checker/linters/
          DEFAULT_BRANCH: prod
      - name: Summary
        if: "! github.event.pull_request.head.repo.fork"
        run: |
            < ./checker.log tail -n +2; echo "====== Super Linter ======"
            < ./super-linter.log sed -n '/.*The script has completed.*/,$p' | tail -n +4 | sed  's/.*\(\[[A-Z]\+\]\)/\1/'
            echo "====== Examine logs in Checker and Super-Linter steps for more details ======"
            if [ '${{ steps.Checker.outcome }}' != 'success' ] || [ '${{ steps.Lint-Code-Base.outcome }}' != 'success' ]; then exit 1; fi

  test-app:
    runs-on: ubuntu-latest
    needs: [check-files]
    if: "!contains(needs.check-files.outputs.canSkip, 'true')"
    defaults:
      run:
        working-directory: finish
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
      - run: unset _JAVA_OPTIONS

      - name: Run tests
        run: ../scripts/testApp.sh

      - name: Post tests
        if: always()
        run: |
          logsPath=$(sudo find . -name "console.log" | grep system);
          sudo cat "$logsPath" | sudo grep Launching
          logsPath=$(sudo find . -name "console.log" | grep module-getting-started);
          sudo cat "$logsPath" | sudo grep Launching
          logsPath=$(sudo find . -name "console.log" | grep module-openapi);
          sudo cat "$logsPath" | sudo grep Launching
          logsPath=$(sudo find . -name "console.log" | grep module-config);
          sudo cat "$logsPath" | sudo grep Launching
          logsPath=$(sudo find . -name "console.log" | grep module-jwt);
          sudo cat "$logsPath" | sudo grep Launching
      - name: Archive server logs if failed
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: server-logs
          path: start/inventory/build/wlp/usr/servers/defaultServer/logs/
